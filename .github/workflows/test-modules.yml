name: Test module for os

on:
  workflow_dispatch:
    inputs:
      npm_packages:
        description: "Npm package -separated by space or all to test all"
        required: true
        type: string
        default: ""
      os:
        description: "Operating System"
        required: true
        type: choice
        options:
          - "rhel8"
          - "rhel9"
          - "fedora38"
          - "fedora40"
          - "c9s"
          - "c10s"
          - "ubuntu20"
          - "ubuntu22"
          - "ubuntu24"
          - "ubuntu_latest_host"
      node_versions:
        description: "Node version(s) -separate with space"
        required: true
        type: string
      citgm:
        description: "Citgm"
        required: false
        type: choice
        default: "false"
        options:
          - "true"
          - "false"
      save_logs:
        description: "Save logs in workflow artifacts"
        required: true
        type: choice
        default: "true"
        options:
          - "true"
          - "false"

jobs:
  preparation:
    name: Preparation for ${{inputs.os}}
    runs-on: ubuntu-latest
    outputs:
      module_node_version: ${{ steps.get-supported-modules-and-node-versions.outputs.module_node_version }}
      machine: ${{ steps.container-or-host.outputs.machine }}
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Get supported modules and node versions for ${{inputs.os}}
        id: get-supported-modules-and-node-versions
        run: |
          ./.github/scripts/get_supported_modules_and_node_versions.sh  "${{inputs.npm_packages}}" "${{inputs.node_versions}}" ${{inputs.os}} >> $GITHUB_OUTPUT

      - name: Set env variables
        id: container-or-host
        run: |
          if [[ ${{inputs.os}} == "ubuntu_latest_host" ]]; then
            echo "machine=host" >> $GITHUB_OUTPUT
          else
            echo "machine=container" >> $GITHUB_OUTPUT
          fi

  test_modules:
    needs: preparation
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        module_node_version: ${{ fromJson(needs.preparation.outputs.module_node_version) }}
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Parse node version and module name
        id: parse_node_and_module
        run: |
          node_version=$(echo '${{ matrix.module_node_version }}' | jq -r '.node_version')
          echo "node_version=$node_version" >> $GITHUB_OUTPUT

          module_name=$(echo '${{ matrix.module_node_version }}' | jq -r '.name')
          echo "module_name=$module_name" >> $GITHUB_OUTPUT

      - name: Use Node.js
        uses: actions/setup-node@v4
        if: ${{ needs.preparation.outputs.machine == 'host' }}
        with:
          node-version: ${{ steps.parse_node_and_module.outputs.node_version }}

      - name: Run on Host, os ${{ inputs.os }} node ${{ steps.parse_node_and_module.outputs.node_version }} module ${{ steps.parse_node_and_module.outputs.module_name }} citgm ${{ inputs.citgm }}
        if: ${{ needs.preparation.outputs.machine == 'host' }}
        run: |
          ./container_scripts/install_test_module.sh "${{ steps.parse_node_and_module.outputs.module_name }}" "${{ inputs.citgm }}"

      - name: Run on container, os ${{ inputs.os }} node ${{ steps.parse_node_and_module.outputs.node_version }} module ${{ steps.parse_node_and_module.outputs.module_name }} citgm ${{ inputs.citgm }}
        if: ${{ needs.preparation.outputs.machine == 'container' }}
        run: |
          ./test.sh --operating-systems ${{inputs.os}} \
          --node-versions ${{ steps.parse_node_and_module.outputs.node_version }} \
          --packages ${{ steps.parse_node_and_module.outputs.module_name }} \
          --citgm ${{ inputs.citgm }} \
          --save_logs ${{ inputs.save_logs }}

      - name: Format string
        id: format-string
        run: |
          echo "module_name=$(echo "${{ steps.parse_node_and_module.outputs.module_name }}" |  sed 's/@/_/g; s/\//_/g')" >> "$GITHUB_OUTPUT"

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: result-os-${{inputs.os}}-node_version-${{ steps.parse_node_and_module.outputs.node_version }}-npm-package-${{ steps.format-string.outputs.module_name }}-citgm-${{ inputs.citgm }}
          path: build_output.log
          if-no-files-found: error

      - name: Fail the job in case of module test failure
        run: |
          if grep -q "ERROR:" build_output.log; then
            exit 1
          fi
